// airspyhf-fmradion
// Software decoder for FM broadcast radio with Airspy
//
// Copyright (C) 2019 Kenji Rikitake, JJ1BDX
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

#ifndef SOFTFM_FILTERPARAMETERS_H
#define SOFTFM_FILTERPARAMETERS_H

#include "SoftFM.h"

// Class for providing filter parameters
// based on pre-calculated tables

// Class declaration

class FilterParameters {
public:
  static const std::vector<IQSample::value_type> delay_3taps_only_iq;

  static const std::vector<IQSample::value_type> jj1bdx_768kHz_div2;

  static const std::vector<SampleVector::value_type> delay_3taps_only_audio;

  static const std::vector<SampleVector::value_type> jj1bdx_384k_div4;
  static const std::vector<SampleVector::value_type> jj1bdx_96k_div2_fmaudio;
};

// Values of vectors

const std::vector<IQSample::value_type> FilterParameters::delay_3taps_only_iq =
    {0.0, 1.0, 0.0};

const std::vector<IQSample::value_type> FilterParameters::jj1bdx_768kHz_div2 = {
    -80.45166480527626620E-6, -60.77347224355364120E-6,
    344.5669900025662860E-6,  842.8193698592094730E-6,
    273.6587575744317180E-6,  -0.001751302018494965,
    -0.002829324503426022,    345.1385486021861200E-6,
    0.006084303435155764,     0.006155552198206807,
    -0.004441377713133675,    -0.015686748717755359,
    -0.008854495023301099,    0.017455540889326125,
    0.033102884536192680,     0.004920670487688152,
    -0.052164192329056364,    -0.065933030871397277,
    0.028177275393181687,     0.205293273389789810,
    0.348935769760806425,     0.348935769760806425,
    0.205293273389789810,     0.028177275393181687,
    -0.065933030871397277,    -0.052164192329056364,
    0.004920670487688152,     0.033102884536192680,
    0.017455540889326125,     -0.008854495023301099,
    -0.015686748717755359,    -0.004441377713133675,
    0.006155552198206807,     0.006084303435155764,
    345.1385486021861200E-6,  -0.002829324503426022,
    -0.001751302018494965,    273.6587575744317180E-6,
    842.8193698592094730E-6,  344.5669900025662860E-6,
    -60.77347224355364120E-6, -80.45166480527626620E-6};

const std::vector<SampleVector::value_type>
    FilterParameters::delay_3taps_only_audio = {0.0, 1.0, 0.0};

const std::vector<SampleVector::value_type> FilterParameters::jj1bdx_384k_div4 =
    {14.52947577785836590E-6,  95.20739719824624100E-6,
     214.4850143846749120E-6,  382.7608452902745170E-6,
     535.5797357801019420E-6,  577.3087372703312210E-6,
     390.1287377444069190E-6,  -114.5505466091317000E-6,
     -933.6065065446027800E-6, -0.001917037040648593,
     -0.002752241805831188,    -0.003014084368492198,
     -0.002289244969761553,    -353.7762005491940730E-6,
     0.002648511973508020,     0.006099899616750696,
     0.008944728872552828,     0.009905883873533625,
     0.007863588992941702,     0.002312676637895708,
     -0.006237931695418458,    -0.016074958765079868,
     -0.024417582532003029,    -0.027916246416227537,
     -0.023438500360446604,    -0.008961437656866217,
     0.015672652571522762,     0.048376313555821851,
     0.084969832010171720,     0.119886798568872466,
     0.147294655982957268,     0.162364006920025283,
     0.162364006920025283,     0.147294655982957268,
     0.119886798568872466,     0.084969832010171720,
     0.048376313555821851,     0.015672652571522762,
     -0.008961437656866217,    -0.023438500360446604,
     -0.027916246416227537,    -0.024417582532003029,
     -0.016074958765079868,    -0.006237931695418458,
     0.002312676637895708,     0.007863588992941702,
     0.009905883873533625,     0.008944728872552828,
     0.006099899616750696,     0.002648511973508020,
     -353.7762005491940730E-6, -0.002289244969761553,
     -0.003014084368492198,    -0.002752241805831188,
     -0.001917037040648593,    -933.6065065446027800E-6,
     -114.5505466091317000E-6, 390.1287377444069190E-6,
     577.3087372703312210E-6,  535.5797357801019420E-6,
     382.7608452902745170E-6,  214.4850143846749120E-6,
     95.20739719824624100E-6,  14.52947577785836590E-6};

const std::vector<SampleVector::value_type>
    FilterParameters::jj1bdx_96k_div2_fmaudio = {
        22.65350511944246750E-6,  -5.725703324882768010E-6,
        -71.35121973320370610E-6, -128.0209074407509040E-6,
        -87.80136969981688820E-6, 62.32477061894137900E-6,
        192.2878778979380740E-6,  128.0024258430840690E-6,
        -133.2103535366942140E-6, -336.5189766317962490E-6,
        -193.5919958690212750E-6, 250.8690534304952000E-6,
        544.1852338341574300E-6,  258.3917798970840070E-6,
        -448.2664655149519600E-6, -829.0314938014090560E-6,
        -302.2398981566634580E-6, 758.6140683428509420E-6,
        0.001198235941305315,     293.1596154294060170E-6,
        -0.001220251098823188,    -0.001650954385898930,
        -186.1498376669653110E-6, 0.001874792023629356,
        0.002174880002253524,     -78.20260917703814130E-6,
        -0.002764591247121571,    -0.002742325050530087,
        575.2442989102069080E-6,  0.003931105731799281,
        0.003307460341749164,     -0.001397493159903802,
        -0.005413158738939785,    -0.003802246262787485,
        0.002659000716172048,     0.007248711748553124,
        0.004132585464388777,     -0.004504156088876310,
        -0.009480551743476997,    -0.004170036568808575,
        0.007129924759425904,     0.012172360518096385,
        0.003734471566039598,     -0.010837187505786373,
        -0.015446045211741213,    -0.002551074508710326,
        0.016157420415095859,     0.019573207818830766,
        131.0909609931179890E-6,  -0.024205577191885028,
        -0.025238243988766569,    0.004610738752416145,
        0.037885654857815983,     0.034519165627077207,
        -0.015010662050859222,    -0.067922292047558369,
        -0.056884617972742989,    0.050260188057771486,
        0.211255215732334550,     0.330861968555346442,
        0.330861968555346442,     0.211255215732334550,
        0.050260188057771486,     -0.056884617972742989,
        -0.067922292047558369,    -0.015010662050859222,
        0.034519165627077207,     0.037885654857815983,
        0.004610738752416145,     -0.025238243988766569,
        -0.024205577191885028,    131.0909609931179890E-6,
        0.019573207818830766,     0.016157420415095859,
        -0.002551074508710326,    -0.015446045211741213,
        -0.010837187505786373,    0.003734471566039598,
        0.012172360518096385,     0.007129924759425904,
        -0.004170036568808575,    -0.009480551743476997,
        -0.004504156088876310,    0.004132585464388777,
        0.007248711748553124,     0.002659000716172048,
        -0.003802246262787485,    -0.005413158738939785,
        -0.001397493159903802,    0.003307460341749164,
        0.003931105731799281,     575.2442989102069080E-6,
        -0.002742325050530087,    -0.002764591247121571,
        -78.20260917703814130E-6, 0.002174880002253524,
        0.001874792023629356,     -186.1498376669653110E-6,
        -0.001650954385898930,    -0.001220251098823188,
        293.1596154294060170E-6,  0.001198235941305315,
        758.6140683428509420E-6,  -302.2398981566634580E-6,
        -829.0314938014090560E-6, -448.2664655149519600E-6,
        258.3917798970840070E-6,  544.1852338341574300E-6,
        250.8690534304952000E-6,  -193.5919958690212750E-6,
        -336.5189766317962490E-6, -133.2103535366942140E-6,
        128.0024258430840690E-6,  192.2878778979380740E-6,
        62.32477061894137900E-6,  -87.80136969981688820E-6,
        -128.0209074407509040E-6, -71.35121973320370610E-6,
        -5.725703324882768010E-6, 22.65350511944246750E-6};

#endif // SOFTFM_EQPARAMETERS_H
